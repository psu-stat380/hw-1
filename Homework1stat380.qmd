---
title: "Untitled"
#format: html
format: pdf
editor: visual
author: Kynan Bohner
date: 1/28/23
---

## \# Question 2

```{r}
library(tidyverse)
my_vec <- c(
    "+0.07",
    "-0.07",
    "+0.25",
    "-0.84",
    "+0.32",
    "-0.24",
    "-0.97",
    "-0.36",
    "+1.76",
    "-0.36"
)
#1. What data types does the data contain?
class(my_vec)
## Character

#2. Convert to Double and Int

my_vec_double <- as.double(my_vec)
my_vec_integer <- as.integer(my_vec)

#3. Create a new vector my_vec_bool

my_vec_bool <- (my_vec_double > 0)
counter <- 0
for(i in my_vec_bool)
  if(i=="TRUE") 
    counter=counter+1
print(counter)
## 4 elements in my_vec_bool are greater than 0

#4. Sort the values of my_vec_double in ascending order.

ascendinglist <- list()
ascendinglist <- sort(my_vec_double, decreasing=F)
print(ascendinglist)
## does this count? it seems to be in decerasing order, depends on what side you consider the beginning 





```

# Question 3

```{r}
#1.
vec1 <- c(1,2,3,4,5,6,7,8,9)
matrix1 <- matrix(vec1,nrow=3,ncol=3,byrow=T)
#matrix1


vec100 <- c(1:100)
vec10000 <- c(1:100)^2
matrix2 <- rbind(vec100, vec10000)
#matrix2

#2.

generate_matrix <- function(n){
    return(
        matrix(
            rnorm(n^2),
            nrow=n, ncol=n # i added this to account for 3.6 where we need the matrix to be n by n
        )
    )
}

M <- generate_matrix(50)
#M <- generate_matrix(100)
#M <- generate_matrix(1000)
#M <- generate_matrix(5000)


row_wise_scan <- function(x){
    n <- nrow(x)
    m <- ncol(x)

 
    count <- 0
    for(i in M) 
      for(j in i)
        if(j>=0) 
          count <- count + 1 
        

    return(count)
}

a <- row_wise_scan(10)
print(a)

#3. 

col_wise_scan <- function(x){
    count <- 0
    for(i in M) 
      for(j in i)
        if(i>=0) 
          count <- count + 1 
        
    

    return(count)
}
b <- col_wise_scan(10)
print(b)

#4.

## The rowwise scanner, because that is how memory is stored

#5.

time_scan <- function(f, M){
    initial_time <- Sys.time() # Write your code here
    f(M)
    final_time <- Sys.time()  # Write your code here
    
    total_time_taken <- final_time - initial_time
    return(total_time_taken)
}

list(
    row_wise_time = time_scan(row_wise_scan, M),
    col_wise_time = time_scan(col_wise_scan, M) #changed this to col_wise_scan because it seemed like a typo error on your part
)

## Rowwise time took less for M(50)

#6. 

## look where M was defined

### we can conclude that the higher the dimensions the less difference between rowwise and colwise

```

```{r}
sessionInfo()
'R version 4.2.1 (2022-06-23 ucrt)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 19044)

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.utf8  LC_CTYPE=English_United States.utf8   
[3] LC_MONETARY=English_United States.utf8 LC_NUMERIC=C                          
[5] LC_TIME=English_United States.utf8    

attached base packages:
[1] stats     graphics  grDevices datasets  utils     methods   base     

other attached packages:
[1] forcats_0.5.2   stringr_1.5.0   dplyr_1.0.10    purrr_1.0.1     readr_2.1.3    
[6] tidyr_1.2.1     tibble_3.1.8    ggplot2_3.4.0   tidyverse_1.3.2

loaded via a namespace (and not attached):
 [1] tidyselect_1.2.0    xfun_0.36           haven_2.5.1         gargle_1.2.1       
 [5] colorspace_2.0-3    vctrs_0.5.1         generics_0.1.3      utf8_1.2.2         
 [9] rlang_1.0.6         pillar_1.8.1        glue_1.6.2          withr_2.5.0        
[13] DBI_1.1.3           dbplyr_2.2.1        modelr_0.1.10       readxl_1.4.1       
[17] lifecycle_1.0.3     munsell_0.5.0       gtable_0.3.1        cellranger_1.1.0   
[21] rvest_1.0.3         knitr_1.41          tzdb_0.3.0          fansi_1.0.3        
[25] broom_1.0.2         renv_0.16.0-53      scales_1.2.1        backports_1.4.1    
[29] googlesheets4_1.0.1 jsonlite_1.8.4      fs_1.5.2            hms_1.1.2          
[33] stringi_1.7.12      grid_4.2.1          cli_3.6.0           tools_4.2.1        
[37] magrittr_2.0.3      crayon_1.5.2        pkgconfig_2.0.3     ellipsis_0.3.2     
[41] xml2_1.3.3          reprex_2.0.2        googledrive_2.0.0   lubridate_1.9.0    
[45] timechange_0.2.0    assertthat_0.2.1    httr_1.4.4          rstudioapi_0.14    
[49] R6_2.5.1            compiler_4.2.1     
Run All Chunks AboveRun Current Chunk'
```

# Footnote

```{r}
sapply(1:100, function(i) {
    x <- generate_matrix(100)
    row_wise_scan(x) == col_wise_scan(x)
}) %>% sum == 100
#it reports TRUE so i will assume nothing wrong with my code

##Git Push said everything up to date
```
